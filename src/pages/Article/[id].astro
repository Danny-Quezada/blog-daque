---
import Header from "../../components/Header.astro";
import Layout from "../../layouts/Layout.astro";
import ArticleRepository from "../../lib/infraestructure/ArticleRepository";
import { Markdown } from "@astropub/md";

const { id } = Astro.params;
const repository = new ArticleRepository();
const article = await repository.GetById(id!);
console.log(article);
if (article == null) {
  return Astro.redirect("/404");
}
const value = article.Value.replaceAll("\\n", "\n");
---

<Layout title={article.Title}>
  <Header>
    <span id="category" transition:name="Category">{article.Category}</span>
  </Header>
  <main id="container">
    <article id="article">
      <span>
        <a href="/" id="button">
          <img src="../../../public/icons/leftarrow.svg" alt="" />
        </a>
        <h1 id="title" transition:name="Title">{article.Title}</h1>
      </span>
      <span id="date">{article.PublishAt.toDateString()}</span>

      <div id="content">
        <Markdown
          of={/*"```python \nprint(\"Hello, world!\")\nfor i in range(10):\n    print(i)\n```"*/ value}
        />
      </div>
    </article>
  </main>
</Layout>

<style>
  #container {
    display: flex;

    justify-content: center;
  }

  #category {
    color: var(--secondary-color);
  }

  #article {
    margin-top: 80px;
    width: 50%;
  }
  #article > span {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  #button {
    border-radius: 50%;

    display: inline;
    display: flex;
    align-items: center;
  }

  #title {
    font-weight: bold;
    font-size: 2em;
    display: inline;
  }
  #date {
    font-weight: bold;
    margin-top: 10px;
    color: var(--secondary-color);
  }
  #content {
    margin-top: 20px;
    position: relative;
  }

  #content h1 {
    font-size: 2em;
  }
  #content h1 {
    border-bottom: 1px solid #b4b4b885;
  }

  @media (width<580px) {
    #container {
      margin-top: 60px;
    }
    #article {
      width: 100%;
      margin-top: 20px;
      padding: 7px;
    }
  }
</style>
